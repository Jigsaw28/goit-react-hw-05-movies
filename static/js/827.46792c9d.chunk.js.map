{"version":3,"file":"static/js/827.46792c9d.chunk.js","mappings":"wMAOA,EALuB,SAACA,GAAD,OACrBC,MAAM,mDAAD,OACgDD,EADhD,oBAHS,qCAKZE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAHM,E,4CCAVC,EAAUC,EAAAA,GAAAA,IAAH,yEAIPC,EAAWD,EAAAA,GAAAA,GAAH,yGAORE,EAAOF,EAAAA,GAAAA,MAAF,4IAOLG,EAASH,EAAAA,GAAAA,OAAH,iJ,SCsCnB,EArDe,WAAO,IAAD,EACbI,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAK,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAE1C,GAA4BC,EAAAA,EAAAA,UAASF,GAArC,eAAOf,EAAP,KAAekB,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACJrB,GACFsB,EAAetB,GACZE,MAAK,SAAAqB,GACJH,EAAUG,EAAKC,QAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEjB,GAAE,CAAC1B,IAYJ,OACE,UAACK,EAAD,YACE,kBAAMwB,SAZW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAOC,SAASC,MAAMC,MAAMC,OACjD,IAAKL,EACH,OAAOlB,EAAe,CAAC,GAEzBI,EAAUc,GACVlB,EAAe,CAAEC,MAAOiB,GACzB,EAIG,WACE,SAACxB,EAAD,CACE8B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,WAEP,SAACjC,EAAD,CAAQ6B,KAAK,SAAb,SAAsB,eAExB,wBACGnB,EAAOwB,KAAI,SAAAC,GAAK,OACf,SAACrC,EAAD,WACE,SAAC,KAAD,CAAMsC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMtC,GAAhD,SACGkC,EAAMK,SAFIL,EAAME,GADN,QAUxB,C","sources":["API/getSearchMovie.jsx","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["const API_KEY = '9f234b00a323f5ab16274541e59c6da6';\n\nconst getSearchMovie = (search) =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}`\n  ).then(response => response.json());\n\nexport default getSearchMovie;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    padding-top: 40px;\n    padding-left: 20px;\n`\nexport const ListItem = styled.li`\n    line-height: 1.6;\n\n    &:first-child {\n        padding-top: 10px;\n    }\n`\nexport const Input =styled.input`\n    width: 300px;   \n    padding: 5px 10px;\n    margin-right: 20px;\n    outline: none;\n    border-radius: 5px;\n` \nexport const Button = styled.button`\n    padding: 5px 10px;\n    color: #fff;\n    background-color: #2196f3;\n    border: #2196f3;\n    border-radius: 5px;\n`","import getSearchMovie from 'API/getSearchMovie';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Wrapper, ListItem, Input, Button } from './Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParam, setSearchParam] = useSearchParams();\n  const query = searchParam.get('query') ?? '';\n\n  const [search, setSearch] = useState(query);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (search) {\n      getSearchMovie(search)\n        .then(data => {\n          setMovies(data.results);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [search]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.target.elements.input.value.trim();\n    if (!inputValue) {\n      return setSearchParam({});\n    }\n    setSearch(inputValue);\n    setSearchParam({ query: inputValue });\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"input\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <ListItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["search","fetch","then","response","json","Wrapper","styled","ListItem","Input","Button","location","useLocation","useSearchParams","searchParam","setSearchParam","query","get","useState","setSearch","movies","setMovies","useEffect","getSearchMovie","data","results","catch","error","console","log","onSubmit","e","preventDefault","inputValue","target","elements","input","value","trim","type","autoComplete","autoFocus","placeholder","name","map","movie","to","id","state","from","title"],"sourceRoot":""}